#include <iostream>
#include <fstream>
#include <string>
#include <iomanip>


struct address
{
char city[15];
char street[15];
int numbilding;
};

struct museum
{
char name[15];
char appointment[15];
address Adr;
int fclock;
int fmin;
int tclock;
int tmin;
int price;
};
inline void eatline() { while (std::cin.get() != '\n') continue; }
void sort(int n,museum *Mus, museum * new_Mus,int flag );
void Inputdateinthefile( const char * file, int n, museum* Mus );
void output_array(int n, museum* Mus);
void output_arrayfromthefile(int n, museum* Mus);
int Inputdate( const char * file, museum* Mus);
int Inputdate( const char * file,int n, museum* Mus );

const char * file = "//Users/katuato/Desktop/cpp/File.txt";
const char * filesort = "//Users/katuato/Desktop/cpp/File2.txt";

int main()
{
    int flag,n,k;
    n=100;
    museum *Mus=new museum[n];
    museum *new_Mus=new museum[n];
    std::cout<<"\n  Вид действия:" << std::endl ;
    std::cout<<"  1 - создание базы данных" << std::endl ;
    std::cout<<"  2 - добавление новых записей" << std::endl ;
    std::cout<<"  3 - отбор" << std::endl ;
    std::cout<<"  4 - просмотр базы данных" << std::endl ;
    std::cout<<"  0 - завершение задачи" << std::endl ;
    std::cout<<"  Введите вид действия ->" ;
    flag=0;
    std::cin>>flag;
while (flag!=0)
{
switch (flag)
    {
    case 1:
        {
            n=Inputdate(file,Mus);
            break;
        }
    case 2:
        {
            k=Inputdate(file,n,Mus);
            n+=k;
            break;
        }
    case 3:
        {
            std::cout<<"\n  Вид действия:" << std::endl ;
            std::cout<<"  1 - отбор по названию" << std::endl ;
            std::cout<<"  2 - отбор по направленности" << std::endl ;
            std::cout<<"  3 - отбор по адресу" << std::endl ;
            std::cout<<"  4 - отбор по времени работы" << std::endl ;
            std::cout<<"  5 - отбор по цене билета" << std::endl ;
            std::cout<<"  0 - завершение задачи" << std::endl ;
            std::cout<<"  Введите вид действия ->" ;
            flag=0;
            std::cin>>flag;
            switch (flag)
            {
                    case 1:
                    {
                        sort(n,Mus,new_Mus,flag);
                        break;
                    }
                    case 2:
                    {
                        sort(n,Mus,new_Mus,flag);
                        break;
                    }
                    case 3:
                    {
                        std::cout<<"\n  Вид действия:" << std::endl ;
                        std::cout<<"  11 - отбор по городу" << std::endl ;
                        std::cout<<"  22 - отбор по улице" << std::endl ;
                        std::cout<<"  33 - отбор по номеру дома" << std::endl ;
                        std::cout<<"  0 - завершение задачи" << std::endl ;
                        std::cout<<"  Введите вид действия ->" ;
                        flag=0;
                        std::cin>>flag;
                        switch (flag)
                        {
                            case 11:
                            {
                                sort(n,Mus,new_Mus,flag);
                            break;
                            }
                            case 22:
                            {
                                sort(n,Mus,new_Mus,flag);
                            break;
                            }
                            case 33:
                            {
                                sort(n,Mus,new_Mus,flag);
                            break;
                            }
                            case 0:
                            {
                             break;
                            }
                        }
                        break;
                    }
                case 4:
                    {
                        sort(n,Mus,new_Mus,flag);
                        break;
                    }
                
                case 5:
                    {
                        sort(n,Mus,new_Mus,flag);
                        break;
                    }
                case 6:
                    {
                        break;
                    }
            }
            break;
        }
    case 4:
        {
           output_arrayfromthefile(n, Mus);
           output_array(n,Mus);
           break;
        }
    case 0:
        {
            break;
        }
    }
    std::cout<<"\n  Вид действия:" << std::endl ;
    std::cout<<"  1 - создание базы данных" << std::endl ;
    std::cout<<"  2 - добавление новых записей" << std::endl ;
    std::cout<<"  3 - отбор" << std::endl ;
    std::cout<<"  4 - просмотр базы данных" << std::endl ;
    std::cout<<"  0 - завершение задачи" << std::endl ;
    std::cout<<"  Введите вид действия ->" ;
std::cin>>flag;
}
}


    int Inputdate( const char * file, museum* Mus)
    {
            std::cout << "Input the number of museums in new date: ";
            int n;
            std::cin >> n;
            std::cin.get();
            for (int i = 0; i < n; i++)
            {
                std::cout <<"Name:";
                std::cin.getline(Mus[i].name,15);
                std::cout <<"Appointment:";
                std::cin.getline(Mus[i].appointment,15);
                std::cout <<"Address(city):";
                std::cin.getline(Mus[i].Adr.city,15);
                std::cout <<"Address(street):";
                std::cin.getline(Mus[i].Adr.street,15);
                std::cout <<"Address(number of building):";
                std::cin>>Mus[i].Adr.numbilding;
                std::cout <<"Clock of opening:";
                std::cin >> Mus[i].fclock;
                std::cout <<"Minutes of opening:";
                std::cin >> Mus[i].fmin;
                std::cout <<"Clock of closing:";
                std::cin >> Mus[i].tclock;
                std::cout <<"Minutes of closing:";
                std::cin >> Mus[i].tmin;
                std::cout <<"Price:";
                std::cin >> Mus[i].price;
                std::cin.get();
            }
            Inputdateinthefile(file,n,Mus);
            return n;
        }

void Inputdateinthefile( const char * file, int n, museum* Mus )
{
std::ofstream fout;
fout.open(file,std::ios_base::out);
for (int i = 0; i < n; i++)
{
    fout.write((char*)&Mus[i].name, sizeof Mus[i].name);
    fout.write((char*)&Mus[i].appointment, sizeof Mus[i].appointment);
    fout.write((char*)&Mus[i].Adr.city, sizeof Mus[i].Adr.city);
    fout.write((char*)&Mus[i].Adr.street, sizeof Mus[i].Adr.street);
    fout << Mus[i].Adr.numbilding;
    fout << Mus[i].fclock;
    fout << Mus[i].fmin;
    fout << Mus[i].tclock;
    fout << Mus[i].tmin;
    fout <<  Mus[i].price;
}
    eatline();
    fout.close();
}
            int Inputdate( const char * file, int n, museum* Mus )
            {
            std::cout << "Input the number of museums, which you want to add: ";
            int k;
            std::cin >> k;
            std::cin.get();
            std::ofstream fout;
            fout.open(file,std::ios::app);
            for (int i = n; i < n+k; i++)
            {
                std::cout <<"Name:";
                std::cin.getline(Mus[i].name,15);
              fout.write((char*) &Mus[i].name ,sizeof Mus[i].name);
                std::cout <<"Appointment:";
                std::cin.getline(Mus[i].appointment,15);
              fout.write((char*) &Mus[i].appointment ,sizeof Mus[i].appointment);
                std::cout <<"Address(city):";
                std::cin.getline(Mus[i].Adr.city,15);
               fout.write((char*) &Mus[i].Adr.city ,sizeof Mus[i].Adr.city);
                std::cout <<"Address(street):";
                std::cin.getline(Mus[i].Adr.street,15);
                fout.write((char*) &Mus[i].Adr.street ,sizeof Mus[i].Adr.street);
                std::cout <<"Address(number of building):";
                std::cin>>Mus[i].Adr.numbilding;
                fout << Mus[i].Adr.numbilding;
                std::cout <<"Clock of opening:";
                std::cin >> Mus[i].fclock;
                fout <<  Mus[i].fclock;
                std::cout <<"Minutes of opening:";
                std::cin >> Mus[i].fmin;
                fout <<  Mus[i].fmin;
                std::cout <<"Clock of closing:";
                std::cin >> Mus[i].tclock;
                fout <<  Mus[i].tclock;
                std::cout <<"Minutes of closing:";
                std::cin >> Mus[i].tmin;
               fout <<  Mus[i].tmin;
                std::cout <<"Price:";
                std::cin >> Mus[i].price;
               fout <<  Mus[i].price;
//                fout.write((char*)&Mus[i], sizeof Mus[i]);
                std::cin.get();
            }
            fout.close();
            return k;
        }
    
void output_arrayfromthefile(int n, museum* Mus)
{
    std::ifstream fin;
    fin.open(file,std::ios_base::in);
    for (int i=0;i<n;i++)
    {
        fin.read((char*)&Mus[i].name, sizeof Mus[i].name);
        fin.read((char*)&Mus[i].appointment, sizeof Mus[i].appointment);
        fin.read((char*)&Mus[i].Adr.city, sizeof Mus[i].Adr.city);
        fin.read((char*)&Mus[i].Adr.street, sizeof Mus[i].Adr.street);
            fin >> Mus[i].Adr.numbilding;
            fin >> Mus[i].fclock;
            fin >> Mus[i].fmin;
            fin >> Mus[i].tclock;
            fin >> Mus[i].tmin;
            fin >> Mus[i].price;
    }
    fin.close();
}

void output_array(int n, museum* Mus)
{
 for (int i = 0; i < n; i++)
 {
 std::cout << Mus[i].name << "\t";
 std::cout << Mus[i].appointment << "\t";
 std::cout << Mus[i].Adr.city << ", "<<Mus[i].Adr.street<< " "<<Mus[i].Adr.numbilding <<"\t";
     
  if ((Mus[i].fmin<10) && (Mus[i].tmin>=10))
  std::cout <<"open from "<< Mus[i].fclock << ":0"<< Mus[i].fmin << " to "<< Mus[i].tclock << ":"<< Mus[i].tmin<< "\t";
      
  if ((Mus[i].tmin<10)&& (Mus[i].fmin>=10))
  std::cout <<"open from "<< Mus[i].fclock << ":"<< Mus[i].fmin << " to "<< Mus[i].tclock << ":0"<< Mus[i].tmin<< "\t";
  
if ((Mus[i].tmin<10) && (Mus[i].fmin<10))
  std::cout <<"open from "<< Mus[i].fclock << ":0"<< Mus[i].fmin << " to "<< Mus[i].tclock << ":0"<< Mus[i].tmin<< "\t";
if ((Mus[i].tmin>=10) && (Mus[i].fmin>=10))
     std::cout <<"open from "<< Mus[i].fclock << ":"<< Mus[i].fmin << " to "<< Mus[i].tclock << ":"<< Mus[i].tmin<< "\t";

  std::cout << Mus[i].price<<std::endl;
 }
}

void sort(int n,museum *Mus, museum * new_Mus,int flag)
{
    char sort[15];
    std::ifstream fin;
    fin.open(file,std::ios_base::in);
    int j=0;
    int i,k,h;
    h=0;
    for (i=0;i<n;i++)
    {
        fin.read((char*)&Mus[i].name, sizeof Mus[i].name);
        fin.read((char*)&Mus[i].appointment, sizeof Mus[i].appointment);
        fin.read((char*)&Mus[i].Adr.city, sizeof Mus[i].Adr.city);
        fin.read((char*)&Mus[i].Adr.street, sizeof Mus[i].Adr.street);
        fin >> Mus[i].Adr.numbilding;
        fin >> Mus[i].fclock;
        fin >> Mus[i].fmin;
        fin >> Mus[i].tclock;
        fin >> Mus[i].tmin;
        fin >> Mus[i].price;

    }
        if (flag==1)
        {
        std::cout<<"\n  Введите название музея:" << std::endl ;
        std::cin.get();
        std::cin.getline(sort,15);
        for (i=0;i<n;i++)
        {
        for (k=0;k<15;k++)
        {
           if (Mus[i].name[k]==sort[k])
               h++;
        }
            std::cout<<h;
        if (h==15)
        {
            new_Mus[j]=Mus[i];
            j+=1;
        }
            std::cout<<j;
        }
        }
    
    if (flag==2)
    {
    std::cout<<"\n  Введите назначение музея:" << std::endl ;
    std::cin.get();
    std::cin.getline(sort,15);
    for (i=0;i<n;i++)
    {
        for (k=0;k<15;k++)
        {
           if (Mus[i].appointment[k]==sort[k])
               h++;
        }
        if (h==15)
        {
            new_Mus[j]=Mus[i];
            j+=1;
        }
    }
    }
    if (flag==11)
    {
    std::cout<<"\n  Введите город, где находится музей:" << std::endl ;
    std::cin.get();
    std::cin.getline(sort,15);
    for (i=0;i<n;i++)
    {
        for (k=0;k<15;k++)
        {
           if (Mus[i].Adr.city[k]==sort[k])
               h++;
        }
        if (h==15)
        {
            new_Mus[j]=Mus[i];
            j+=1;
        }
    }
    }
    if (flag==22)
    {
    std::cout<<"\n  Введите улицу, где находится музей:" << std::endl ;
    std::cin.get();
    std::cin.getline(sort,15);
    for (i=0;i<n;i++)
    {
        for (k=0;k<15;k++)
        {
           if (Mus[i].Adr.street[k]==sort[k])
               h++;
        }
        if (h==15)
        {
            new_Mus[j]=Mus[i];
            j+=1;
        }
    }
    }
    if (flag==33)
    {
    std::cout<<"\n  Введите номер дома, где находится музей:" << std::endl ;
    int numbuild;
    std::cin>>numbuild;
    for (i=0;i<n;i++)
    {
    if (Mus[i].Adr.numbilding==numbuild)
    {
        new_Mus[j]=Mus[i];
        j+=1;
    }
    }
    }
    if (flag==4)
    {
        int timeclock,timemin;
        std::cout<<"\n  Введите время, в которое должен работать музей:" << std::endl;
        std::cout<<"Час ";
        std::cin>>timeclock;
        std::cout<<"Минуты ";
        std::cin>>timemin;
        for (i=0;i<n;i++)
        {
            if ((Mus[i].fclock*60+Mus[i].fmin<timeclock*60+timemin) && (timeclock*60+timemin<Mus[i].tclock*60+Mus[i].tmin))
    {
        new_Mus[j]=Mus[i];
        j+=1;
    }
    }
    }
    if (flag==5)
    {
    std::cout<<"\n  Введите максимальную цену за билет в музей:" << std::endl ;
    int price;
    std::cin>>price;
    for (i=0;i<n;i++)
    {
    if (Mus[i].price==price)
    {
        new_Mus[j]=Mus[i];
        j+=1;
    }
    }
    }
    Inputdateinthefile (filesort, j, new_Mus);
    output_array(j, new_Mus);
    for (i=0;i<15;i++)
    sort[i]='\n';
    fin.close();
}
